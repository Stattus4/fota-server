name: Create and publish a Docker image

on:
  push:
    branches: ['staging']

env:
  AWS_REGION: sa-east-1
  REGISTRY: ghcr.io
  EKS_CLUSTER_NAME: eks-cluster-staging-sa-east-1-00001
  EKS_NM: staging
  IMAGE_NAME: ghcr.io/stattus4/${{ github.event.repository.name }}-staging
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.PACKAGE_USER }}
          password: ${{ secrets.PACKAGE_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.event.repository.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION --kubeconfig /tmp/config

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: /tmp/config
        run: |-
          kubectl set image deployment/${{ github.event.repository.name }} ${{ github.event.repository.name }}=${{env.IMAGE_NAME}}:${{ github.sha }}  -n $EKS_NM
          kubectl rollout status deployment/${{ github.event.repository.name }} -n $EKS_NM || (kubectl rollout undo deployment/${{ github.event.repository.name }} -n $EKS_NM && exit 1)
          kubectl get services -o wide
        shell: bash